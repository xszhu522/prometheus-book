import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as t,d as r}from"./app-d7bHIUBF.js";const n="/prometheus-book/assets/grafana_table_panel_example2-ZpS0vr65.png",l="/prometheus-book/assets/grafana_format_as_table-ErjOqa8V.png",i="/prometheus-book/assets/grafana_table_panel_cloum_style-PS0-GN0y.png",o={},s=r('<h1 id="表格-table-panel" tabindex="-1"><a class="header-anchor" href="#表格-table-panel" aria-hidden="true">#</a> 表格：Table Panel</h1><p>通过表格的形式可以同时显示多条时间序列中的数据，可以方便的查看和比较监控指标的数据。Table Panel是Grafana提供的基础可视化组件之一。</p><figure><img src="'+n+'" alt="Table Panel示例" tabindex="0" loading="lazy"><figcaption>Table Panel示例</figcaption></figure><p>对于Prometheus采集到的时间序列数据，Table Panel支持直接将PromQL返回的时间序列格式化为表格的形式进行展示，也可以直接展示时间序列并且对样本数据进行统计聚合。</p><h2 id="格式化时间序列" tabindex="-1"><a class="header-anchor" href="#格式化时间序列" aria-hidden="true">#</a> 格式化时间序列</h2><p>如下所示，\bTable Panel在默认情况下<strong>Format as</strong>配置选项为<strong>Table</strong>。该配置会直接将PromQL查询到的所有样本格式化为Grafana的Table数据结构，并直接展示到表格当中。</p><figure><img src="'+l+'" alt="Format As Table" tabindex="0" loading="lazy"><figcaption>Format As Table</figcaption></figure><p>其中样本的所有标签都被映射成表格的列，其中名为Value列会显示当前样本的值。默认情况下样本值不带任何的单位，为了让Table Panel能够自动化格式化样本值，可以通过Column Styles为\b\bValue定义样本值的格式化方式，如下所示：</p><figure><img src="'+i+'" alt="Column Styles选项" tabindex="0" loading="lazy"><figcaption>Column Styles选项</figcaption></figure><h2 id="使用table可视化时间序列" tabindex="-1"><a class="header-anchor" href="#使用table可视化时间序列" aria-hidden="true">#</a> 使用Table可视化时间序列</h2><h2 id="按行显示时间序列" tabindex="-1"><a class="header-anchor" href="#按行显示时间序列" aria-hidden="true">#</a> 按行显示时间序列</h2><h2 id="按列显示时间序列" tabindex="-1"><a class="header-anchor" href="#按列显示时间序列" aria-hidden="true">#</a> 按列显示时间序列</h2><h2 id="对样本数据进行聚合" tabindex="-1"><a class="header-anchor" href="#对样本数据进行聚合" aria-hidden="true">#</a> 对样本数据进行聚合</h2>',13),h=[s];function d(c,b){return e(),t("div",null,h)}const f=a(o,[["render",d],["__file","use_table_panel.html.vue"]]);export{f as default};
