import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as t,d as s}from"./app-tU1o2vQf.js";const r="/prometheus-book/assets/grafana_heatmap_sample-ax29Nthg.png",o="/prometheus-book/assets/grafana_heatmap_editor-xqmYxEax.png",i="/prometheus-book/assets/grafana_heatmap_metrics_setting-yF5j5FVF.png",n="/prometheus-book/assets/grafana_heatmap_axes_setting-d6YKPFCq.png",p="/prometheus-book/assets/grafana_heatmap_normal_metrics-pwQFcaPp.png",m="/prometheus-book/assets/grafana_heatmap_normal_axes-AWRtCylM.png",g="/prometheus-book/assets/grafana_heatmap_normal_sample-Sz0vvY3_.png",c={},l=s('<h1 id="分布统计-heatmap面板" tabindex="-1"><a class="header-anchor" href="#分布统计-heatmap面板" aria-hidden="true">#</a> 分布统计：Heatmap面板</h1><p>Heatmap是Grafana v4.3版本以后新添加的可视化面板，通过热图可以直观的查看样本的分布情况。在Grafana v5.1版本中Heatmap完善了对Prometheus的支持。这部分，将介绍如何使用Heatmap Panel实现对Prometheus监控指标的可视化。</p><h2 id="使用heatmap可视化histogram样本分布情况" tabindex="-1"><a class="header-anchor" href="#使用heatmap可视化histogram样本分布情况" aria-hidden="true">#</a> 使用Heatmap可视化Histogram样本分布情况</h2><p>在上一小节中，我们尝试了使用Graph面板来可视化Histogram类型的监控指标prometheus_tsdb_compaction_duration_bucket。虽然能展示各个Bucket区间内的样本分布，但是无论是以线图还是柱状图的形式展示，都不够直观。对于Histogram类型的监控指标来说，更好的选择是采用Heatmap Panel，如下所示，Heatmap Panel可以自动对Histogram类型的监控指标分布情况进行计划，获取到每个区间范围内的样本个数，并且以\b颜色的深浅来表示当前区间内样本个数的大小。而图形的高度，则反映出当前时间点，样本分布的离散程度。</p><figure><img src="'+r+'" alt="Heatmap示例" tabindex="0" loading="lazy"><figcaption>Heatmap示例</figcaption></figure><p>在Grafana中使用Heatmap Panel也非常简单，在Dashboard页面右上角菜单中点击“add panel”按钮，并选择Heatmap Panel即可。</p><p>如下所示，Heapmap Panel的编辑页面中，主要包含5类配置选项，分别是：General、Metrics、Axes、Display、Time range。</p><figure><img src="'+o+'" alt="Heapmap Panel编辑页面" tabindex="0" loading="lazy"><figcaption>Heapmap Panel编辑页面</figcaption></figure><p>其中大部分的配置选项与Graph面板基本保持一致，这里就不重复介绍了。</p><p>当使用Heatmap可视化Histogram类型的监控指标时，\b需要设置<strong>Format as</strong>选项为<strong>Heatmap</strong>。当使用Heatmap格式化数据后，Grafana会自动根据样本的\b中的le标签，计算各个Bucket桶内的分布，并且按照Bucket对数据进行重新排序。<strong>Legend format</strong>模板则将会控制Y轴中的显示内容。如下所示：</p><figure><img src="'+i+'" alt="Mteircs设置" tabindex="0" loading="lazy"><figcaption>Mteircs设置</figcaption></figure><p>默认情况下，Heatmap Panel会自行对PromQL查询出的数据进行分布情况统计，而在Prometheus中Histogram类型的监控指标其实是已经自带了分布的Bucket信息的，因此为了直接使用这些Bucket信息，我们需要在<strong>Axes选项</strong>中定义数据的Date format需要定义为<strong>Time series buckets</strong>。该选项表示Heatmap Panel不需要自身对数据\b的分布情况进行计算，直接使用时间序列中返回的Bucket即可。如下所示：</p><figure><img src="'+n+'" alt="Axes设置\b" tabindex="0" loading="lazy"><figcaption>Axes设置\b</figcaption></figure><p>通过以上设置，即可实现对Histogram类型监控指标的可视化。</p><h2 id="使用heatmap可视化其它类型样本分布情况" tabindex="-1"><a class="header-anchor" href="#使用heatmap可视化其它类型样本分布情况" aria-hidden="true">#</a> 使用Heatmap可视化其它类型样本分布情况</h2><p>对于非Histogram类型，由于其监控样本中并不包含Bucket相关信息，因此在<strong>Metrics选项中</strong>需要定义<strong>Format as</strong>为<strong>Time series</strong>，如下所示：</p><figure><img src="'+p+'" alt="Metrics设置" tabindex="0" loading="lazy"><figcaption>Metrics设置</figcaption></figure><p>并且通过<strong>\b\bAxes选项\b</strong>中选择<strong>Data format</strong>方式为<strong>Time series</strong>。设置该选项后Heatmap Panel会要求用户提供Bucket分布范围的设置，如下所示：</p><figure><img src="'+m+'" alt="Axes\b设置\b" tabindex="0" loading="lazy"><figcaption>Axes\b设置\b</figcaption></figure><p>在Y轴（Y Axis）中需要通过Scale定义Bucket桶的分布范围，\b默认的Bucket范围支持包括：liner（线性分布）、log(base 10)（10的对数）、log(base 32)（32的对数）、log(base 1024)（1024的对数）等。</p><p>例如，\b上图中设置的Scale为log(base 2)，那么在Bucket范围将2的对数的形式进行分布，即[1,2,4,8,....]，如下所示：</p><figure><img src="'+g+'" alt="Bucket分布情况" tabindex="0" loading="lazy"><figcaption>Bucket分布情况</figcaption></figure><p>通过以上设置，Heatmap会\b自动根据用户定义的Bucket范围对Prometheus中查询到的样本数据进行分布统计。</p>',23),_=[l];function h(f,u){return e(),t("div",null,_)}const H=a(c,[["render",h],["__file","use_heatmap_panel.html.vue"]]);export{H as default};
