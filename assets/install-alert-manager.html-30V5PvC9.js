import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as l,c as d,a,b as e,e as t,d as r}from"./app-tU1o2vQf.js";const o="/prometheus-book/assets/alertmanager-BTyzTce_.png",c="/prometheus-book/assets/prometheus-alert-firing-with-manager-dji-h_pt.png",m="/prometheus-book/assets/alertmanager-alert-7oUN6UyO.png",u={},g=r('<h1 id="部署alertmanager" tabindex="-1"><a class="header-anchor" href="#部署alertmanager" aria-hidden="true">#</a> 部署Alertmanager</h1><p>Alertmanager和Prometheus Server一样均采用Golang实现，并且没有第三方依赖。一般来说我们可以通过以下几种方式来部署Alertmanager：二进制包、容器以及源码方式安装。</p><h2 id="使用二进制包部署alertmanager" tabindex="-1"><a class="header-anchor" href="#使用二进制包部署alertmanager" aria-hidden="true">#</a> 使用二进制包部署AlertManager</h2><h5 id="获取并安装软件包" tabindex="-1"><a class="header-anchor" href="#获取并安装软件包" aria-hidden="true">#</a> 获取并安装软件包</h5>',4),p={href:"https://prometheus.io/download/",target:"_blank",rel:"noopener noreferrer"},h=r(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">VERSION</span><span class="token operator">=</span><span class="token number">0.15</span>.2
<span class="token function">curl</span> <span class="token parameter variable">-LO</span> https://github.com/prometheus/alertmanager/releases/download/v<span class="token variable">$VERSION</span>/alertmanager-<span class="token variable">$VERSION</span>.darwin-amd64.tar.gz
<span class="token function">tar</span> xvf alertmanager-<span class="token variable">$VERSION</span>.darwin-amd64.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="创建alertmanager配置文件" tabindex="-1"><a class="header-anchor" href="#创建alertmanager配置文件" aria-hidden="true">#</a> 创建alertmanager配置文件</h5><p>Alertmanager解压后会包含一个默认的alertmanager.yml配置文件，内容如下所示：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>global:
  resolve_timeout: 5m

route:
  group_by: [&#39;alertname&#39;]
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: &#39;web.hook&#39;
receivers:
- name: &#39;web.hook&#39;
  webhook_configs:
  - url: &#39;http://127.0.0.1:5001/&#39;
inhibit_rules:
  - source_match:
      severity: &#39;critical&#39;
    target_match:
      severity: &#39;warning&#39;
    equal: [&#39;alertname&#39;, &#39;dev&#39;, &#39;instance&#39;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Alertmanager的配置主要包含两个部分：路由(route)以及接收器(receivers)。所有的告警信息都会从配置中的顶级路由(route)进入路由树，根据路由规则将告警信息发送给相应的接收器。</p><p>在Alertmanager中可以定义一组接收器，比如可以按照角色(比如系统运维，数据库管理员)来划分多个接收器。接收器可以关联邮件，Slack以及其它方式接收告警信息。</p><p>当前配置文件中定义了一个默认的接收者default-receiver由于这里没有设置接收方式，目前只相当于一个占位符。关于接收器的详细介绍会在后续章节介绍。</p><p>在配置文件中使用route定义了顶级的路由，路由是一个基于标签匹配规则的树状结构。所有的告警信息从顶级路由开始，根据标签匹配规则进入到不同的子路由，并且根据子路由设置的接收器发送告警。目前配置文件中只设置了一个顶级路由route并且定义的接收器为default-receiver。因此，所有的告警都会发送给default-receiver。关于路由的详细内容会在后续进行详细介绍。</p><h5 id="启动alertmanager" tabindex="-1"><a class="header-anchor" href="#启动alertmanager" aria-hidden="true">#</a> 启动Alertmanager</h5><p>Alermanager会将数据保存到本地中，默认的存储路径为<code>data/</code>。因此，在启动Alertmanager之前需要创建相应的目录：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./alertmanager
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>用户也在启动Alertmanager时使用参数修改相关配置。<code>--config.file</code>用于指定alertmanager配置文件路径，<code>--storage.path</code>用于指定数据存储路径。</p><h4 id="查看运行状态" tabindex="-1"><a class="header-anchor" href="#查看运行状态" aria-hidden="true">#</a> 查看运行状态</h4>`,13),v={href:"http://192.168.33.10:9093",target:"_blank",rel:"noopener noreferrer"},b=r('<figure><img src="'+o+`" alt="Alertmanager页面" tabindex="0" loading="lazy"><figcaption>Alertmanager页面</figcaption></figure><p>Alert菜单下可以查看Alertmanager接收到的告警内容。Silences菜单下则可以通过UI创建静默规则，这部分我们会在后续部分介绍。进入Status菜单，可以看到当前系统的运行状态以及配置信息。</p><h2 id="关联prometheus与alertmanager" tabindex="-1"><a class="header-anchor" href="#关联prometheus与alertmanager" aria-hidden="true">#</a> 关联Prometheus与Alertmanager</h2><p>在Prometheus的架构中被划分成两个独立的部分。Prometheus负责产生告警，而Alertmanager负责告警产生后的后续处理。因此Alertmanager部署完成后，需要在Prometheus中设置Alertmanager相关的信息。</p><p>编辑Prometheus配置文件prometheus.yml,并添加以下内容</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>alerting:
  alertmanagers:
    - static_configs:
        - targets: [&#39;localhost:9093&#39;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),_={href:"http://192.168.33.10:9090/config",target:"_blank",rel:"noopener noreferrer"},f=r(`<p>此时，再次尝试手动拉高系统CPU使用率：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cat /dev/zero&gt;/dev/null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等待Prometheus告警进行触发状态：</p><figure><img src="`+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>查看Alertmanager UI此时可以看到Alertmanager接收到的告警信息。</p><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="接下来" tabindex="-1"><a class="header-anchor" href="#接下来" aria-hidden="true">#</a> 接下来</h2><p>目前为止，我们已经成功安装部署了Alertmanager并且与Prometheus关联，能够正常接收来自Prometheus的告警信息。接下来我们将详细介绍Alertmanager是如何处理这些接收到的告警信息的。</p>',8);function x(A,k){const n=i("ExternalLinkIcon");return l(),d("div",null,[g,a("p",null,[e("Alertmanager最新版本的下载地址可以从Prometheus官方网站"),a("a",p,[e("https://prometheus.io/download/"),t(n)]),e("获取。")]),h,a("p",null,[e("Alertmanager启动后可以通过9093端口访问，"),a("a",v,[e("http://192.168.33.10:9093"),t(n)])]),b,a("p",null,[e("重启Prometheus服务，成功后，可以从"),a("a",_,[e("http://192.168.33.10:9090/config"),t(n)]),e("查看alerting配置是否生效。")]),f])}const y=s(u,[["render",x],["__file","install-alert-manager.html.vue"]]);export{y as default};
